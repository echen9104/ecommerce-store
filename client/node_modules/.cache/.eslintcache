[{"/Users/ericchen/web-projects/ecommerce-store/client/src/index.js":"1","/Users/ericchen/web-projects/ecommerce-store/client/src/App.js":"2","/Users/ericchen/web-projects/ecommerce-store/client/src/theme.js":"3","/Users/ericchen/web-projects/ecommerce-store/client/src/scenes/checkout/Checkout.jsx":"4","/Users/ericchen/web-projects/ecommerce-store/client/src/scenes/itemDetails/ItemDetails.jsx":"5","/Users/ericchen/web-projects/ecommerce-store/client/src/scenes/checkout/Confirmation.jsx":"6","/Users/ericchen/web-projects/ecommerce-store/client/src/scenes/home/Home.jsx":"7","/Users/ericchen/web-projects/ecommerce-store/client/src/scenes/global/Navbar.jsx":"8","/Users/ericchen/web-projects/ecommerce-store/client/src/state/index.js":"9","/Users/ericchen/web-projects/ecommerce-store/client/src/scenes/global/CartMenu.jsx":"10","/Users/ericchen/web-projects/ecommerce-store/client/src/scenes/home/MainCarousel.jsx":"11","/Users/ericchen/web-projects/ecommerce-store/client/src/scenes/home/ShoppingList.jsx":"12","/Users/ericchen/web-projects/ecommerce-store/client/src/components/Item.jsx":"13","/Users/ericchen/web-projects/ecommerce-store/client/src/scenes/home/Subscribe.jsx":"14","/Users/ericchen/web-projects/ecommerce-store/client/src/scenes/global/Footer.jsx":"15","/Users/ericchen/web-projects/ecommerce-store/client/src/scenes/checkout/Shipping.jsx":"16","/Users/ericchen/web-projects/ecommerce-store/client/src/scenes/checkout/AddressForm.jsx":"17","/Users/ericchen/web-projects/ecommerce-store/client/src/scenes/checkout/Payment.jsx":"18"},{"size":719,"mtime":1679782139092,"results":"19","hashOfConfig":"20"},{"size":1105,"mtime":1679953891671,"results":"21","hashOfConfig":"20"},{"size":1697,"mtime":1679779889896,"results":"22","hashOfConfig":"20"},{"size":6521,"mtime":1680372155887,"results":"23","hashOfConfig":"20"},{"size":5844,"mtime":1680042356751,"results":"24","hashOfConfig":"20"},{"size":485,"mtime":1680372109803,"results":"25","hashOfConfig":"20"},{"size":300,"mtime":1679953262818,"results":"26","hashOfConfig":"20"},{"size":2545,"mtime":1679869485952,"results":"27","hashOfConfig":"20"},{"size":1379,"mtime":1680034520361,"results":"28","hashOfConfig":"20"},{"size":5883,"mtime":1679866525517,"results":"29","hashOfConfig":"20"},{"size":2868,"mtime":1679869763139,"results":"30","hashOfConfig":"20"},{"size":3025,"mtime":1679953111645,"results":"31","hashOfConfig":"20"},{"size":3391,"mtime":1679968000793,"results":"32","hashOfConfig":"20"},{"size":1280,"mtime":1680022002126,"results":"33","hashOfConfig":"20"},{"size":2692,"mtime":1679954864959,"results":"34","hashOfConfig":"20"},{"size":1655,"mtime":1680214611489,"results":"35","hashOfConfig":"20"},{"size":3772,"mtime":1680208017167,"results":"36","hashOfConfig":"20"},{"size":1231,"mtime":1680372309504,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},"ah1fdr",{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"41"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"41"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/ericchen/web-projects/ecommerce-store/client/src/index.js",[],[],[],"/Users/ericchen/web-projects/ecommerce-store/client/src/App.js",[],[],"/Users/ericchen/web-projects/ecommerce-store/client/src/theme.js",[],[],"/Users/ericchen/web-projects/ecommerce-store/client/src/scenes/checkout/Checkout.jsx",[],[],"/Users/ericchen/web-projects/ecommerce-store/client/src/scenes/itemDetails/ItemDetails.jsx",["95"],[],"import { useState, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { IconButton, Box, Typography, Button, Tabs, Tab } from \"@mui/material\";\nimport FavoriteBorderOutlinedIcon from \"@mui/icons-material/FavoriteBorderOutlined\";\nimport { useParams } from \"react-router-dom\";\nimport AddIcon from '@mui/icons-material/Add';\nimport RemoveIcon from '@mui/icons-material/Remove';\nimport { shades } from \"../../theme\";\nimport { addToCart } from \"../../state\";\nimport Item from \"../../components/Item\";\n\nconst ItemDetails = () => {\n    const dispatch = useDispatch();\n    const { itemId } = useParams();\n    const [value, setValue] = useState(\"description\");\n    const [count, setCount] = useState(1);\n    const [item, setItem] = useState(null);\n    const [items, setItems] = useState([]);\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    }\n\n    async function getItem() {\n        const item = await fetch(\n            `http://localhost:1337/api/items/${itemId}?populate=image`,\n            { method: \"GET\" }\n        );\n        const itemJson = await item.json();\n        setItem(itemJson.data);\n    }\n\n    async function getItems() {\n        const items = await fetch(\n            \"http://localhost:1337/api/items?populate=image\",\n            { method: \"GET\" }\n        );\n        const itemsJson = await items.json();\n        setItems(itemsJson.data);\n    }\n\n    useEffect(() => {\n        getItem();\n        getItems();\n    }, [itemId]);\n\n\n    return (\n        <Box width=\"80%\" m=\"80px auto\">\n            <Box display=\"flex\" flexWrap=\"wrap\" columnGap=\"40px\">\n                {/* Images */}\n                <Box flex=\"1 1 40%\" mb=\"40px\">\n                    <img alt={item?.name}\n                        height=\"100%\" width=\"100%\"\n                        src={`http://localhost:1337${item?.attributes?.image?.data?.attributes?.formats?.medium?.url}`} \n                        style={{ objectFit: \"contain\" }}\n                    />\n                </Box>\n\n                {/* Actions */}\n                <Box flex=\"1 1 50%\" mb=\"40px\">\n                    <Box display=\"flex\" justifyContent=\"space-between\">\n                        <Box>Home/Item</Box>\n                        <Box>Prev Next</Box>\n                    </Box>\n\n                    <Box m=\"65px 0 25px 0\">\n                        <Typography variant=\"h3\">{item?.attributes?.name}</Typography>\n                        <Typography>${item?.attributes?.price}</Typography>\n                        <Typography sx={{ mt:\"20px\" }}>\n                            {item?.attributes?.longDescription}\n                        </Typography>\n                    </Box>\n\n                    {/* Item count and add to cart buttons*/}\n                    <Box display=\"flex\" alignItems=\"Center\" minHeight=\"50px\">\n                        {/* Item count button */}\n                        <Box display=\"flex\" alignItems=\"Center\" mr=\"20px\"\n                            border={`1.5px solid ${shades.neutral[300]}`}\n                            p=\"2px 5px\"\n                        >\n                            <IconButton onClick={() => setCount(Math.max(count - 1, 1)) }>\n                                <RemoveIcon />\n                            </IconButton>\n\n                            <Typography sx={{ p: \"0 5px\" }}>{count}</Typography>\n\n                            <IconButton onClick={() => setCount(count + 1)}>\n                                <AddIcon />\n                            </IconButton>\n                        </Box>\n\n                        {/* Add to cart button */}\n                        <Button \n                            sx={{\n                                color: \"white\",\n                                backgroundColor: \"#222222\",\n                                borderRadius: 0,\n                                minWidth: \"150px\",\n                                padding: \"10px 40px\"\n                            }}\n                            onClick={() => dispatch(addToCart({ item: { ...item, count } }))}\n                        >\n                            ADD TO CART\n                        </Button>\n                    </Box>\n                    \n                    {/* Add to wishlist, button has no action */}\n                    <Box>\n                        <Box m=\"20px 0 10px 0\" display=\"flex\">\n                            <FavoriteBorderOutlinedIcon />\n                            <Typography sx={{ ml: \"5px\" }}>Add to wishlist</Typography>\n                        </Box>\n                        <Typography>Categories: {item?.attributes?.category}</Typography>\n                    </Box>\n                </Box>\n            </Box>\n\n            {/* Information for description and reviews */}\n            <Box m=\"20px 0\">\n                <Tabs value={value} onChange={handleChange}>\n                    <Tab label=\"DESCRIPTION\" value=\"description\"></Tab>\n                    <Tab label=\"REVIEWS\" value=\"reviews\"></Tab>\n                </Tabs>\n            </Box>\n            <Box display=\"flex\" flexWrap=\"wrap\" gap=\"15px\">\n                {value === \"description\" && (\n                    <div>{item?.attributes?.longDescription}</div>\n                )}\n                {value === \"reviews\" && <div>No Reviews Yet</div>}\n            </Box>\n\n            {/* Related Products */}\n            <Box mt=\"50px\" width=\"100%\">\n                <Typography variant=\"h3\" fontWeight=\"bold\">Related Products</Typography>\n                <Box mt=\"20px\" display=\"flex\" flexWrap=\"wrap\"\n                    columnGap=\"1.33%\" justifyContent=\"space-between\"\n                >\n                    {items.slice(0, 4).map((item, i) => (\n                        <Item item={item} key={`${item.name}-${i}`} />\n                    ))}\n                </Box>\n            </Box>\n        </Box>\n    )\n}\n\nexport default ItemDetails;","/Users/ericchen/web-projects/ecommerce-store/client/src/scenes/checkout/Confirmation.jsx",[],[],"/Users/ericchen/web-projects/ecommerce-store/client/src/scenes/home/Home.jsx",[],[],"/Users/ericchen/web-projects/ecommerce-store/client/src/scenes/global/Navbar.jsx",[],[],"/Users/ericchen/web-projects/ecommerce-store/client/src/state/index.js",[],[],"/Users/ericchen/web-projects/ecommerce-store/client/src/scenes/global/CartMenu.jsx",[],[],"/Users/ericchen/web-projects/ecommerce-store/client/src/scenes/home/MainCarousel.jsx",[],[],"/Users/ericchen/web-projects/ecommerce-store/client/src/scenes/home/ShoppingList.jsx",["96"],[],"import React, { useEffect, useState } from 'react';\nimport { Box, Typography, Tab, Tabs, useMediaQuery } from '@mui/material';\nimport Item from \"../../components/Item\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setItems } from '../../state';\n\nconst ShoppingList = () => {\n    const dispatch = useDispatch();\n    const [value, setValue] = useState(\"all\");\n    const items = useSelector((state) => state.cart.items);\n    const isNonMobile = useMediaQuery(\"(min-width:600px)\");\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    async function getItems() {\n        const items = await fetch(\n            \"http://localhost:1337/api/items?populate=image\",\n            {method: \"GET\"}\n        )\n\n        const itemsJson = await items.json();\n        dispatch(setItems(itemsJson.data));\n    };\n\n    useEffect(() => {\n        getItems();\n    }, [])\n\n    const topRatedItems = items.filter(\n        (item) => item.attributes.category === \"topRated\"\n    );\n    const newArrivalsItems = items.filter(\n        (item) => item.attributes.category === \"newArrivals\"\n    );\n    const bestSellersItems = items.filter(\n        (item) => item.attributes.category === \"bestSellers\"\n    );\n\n    return (\n        <Box width=\"80%\" margin=\"80px auto\">\n            <Typography variant='h3' textAlign=\"center\">\n                Featured <b>Products</b>\n            </Typography>\n            <Tabs textColor='primary' indicatorColor='primary'\n                value={value} onChange={handleChange}\n                centered TabIndicatorProps={{ sx: { display: isNonMobile ? \"block\" : \"none\"} }}\n                sx={{\n                    m: \"25px\",\n                    \"& .MuiTabs-flexContainer\" : {\n                        flexWrap: \"wrap\"\n                    }\n                }}\n            >\n                <Tab label=\"ALL\" value=\"all\"/>\n                <Tab label=\"NEW ARRIVALS\" value=\"newArrivals\"/>\n                <Tab label=\"TOP RATED\" value=\"topRated\"/>\n                <Tab label=\"BEST SELLERS\" value=\"bestSellers\"/>\n            </Tabs>\n\n            <Box margin=\"0 auto\" display=\"grid\"\n                gridTemplateColumns=\"repeat(auto-fill, 300px)\"\n                justifyContent=\"space-around\" rowGap=\"20px\"\n                columnGap=\"1.33%\"\n            >\n                {value === \"all\" && items.map((item) => (\n                    <Item item={item} key={`${item.name}-${item.id}`} />\n                ))}\n                {value === \"newArrivals\" && newArrivalsItems.map((item) => (\n                    <Item item={item} key={`${item.name}-${item.id}`} />\n                ))}\n                {value === \"bestSellers\" && bestSellersItems.map((item) => (\n                    <Item item={item} key={`${item.name}-${item.id}`} />\n                ))}\n                {value === \"topRated\" && topRatedItems.map((item) => (\n                    <Item item={item} key={`${item.name}-${item.id}`} />\n                ))}\n            </Box>\n        </Box>\n    )\n}\n\nexport default ShoppingList;","/Users/ericchen/web-projects/ecommerce-store/client/src/components/Item.jsx",[],[],"/Users/ericchen/web-projects/ecommerce-store/client/src/scenes/home/Subscribe.jsx",[],[],"/Users/ericchen/web-projects/ecommerce-store/client/src/scenes/global/Footer.jsx",[],[],"/Users/ericchen/web-projects/ecommerce-store/client/src/scenes/checkout/Shipping.jsx",[],[],"/Users/ericchen/web-projects/ecommerce-store/client/src/scenes/checkout/AddressForm.jsx",[],[],"/Users/ericchen/web-projects/ecommerce-store/client/src/scenes/checkout/Payment.jsx",[],[],{"ruleId":"97","severity":1,"message":"98","line":45,"column":8,"nodeType":"99","endLine":45,"endColumn":16,"suggestions":"100"},{"ruleId":"97","severity":1,"message":"101","line":29,"column":8,"nodeType":"99","endLine":29,"endColumn":10,"suggestions":"102"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getItem'. Either include it or remove the dependency array.","ArrayExpression",["103"],"React Hook useEffect has a missing dependency: 'getItems'. Either include it or remove the dependency array.",["104"],{"desc":"105","fix":"106"},{"desc":"107","fix":"108"},"Update the dependencies array to be: [getItem, itemId]",{"range":"109","text":"110"},"Update the dependencies array to be: [getItems]",{"range":"111","text":"112"},[1477,1485],"[getItem, itemId]",[898,900],"[getItems]"]